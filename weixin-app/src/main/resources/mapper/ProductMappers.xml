<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kaishengit.mapper.ProductMapper">
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ，id属性值必须是唯一的，不能够重复使用。
    parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->

    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ）这会告诉 MyBatis 使用JDBC的getGeneratedKeys
    方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->

     <!--keyProperty： （仅对 insert有用）标记一个属性，
      MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
     <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->
    <insert id="save" parameterType="product" useGeneratedKeys="true" keyProperty="id">
        insert into product(product_name,product_inventory)
        values (#{productName},#{productInventory});
    </insert>

    <select id="findAll" resultType="product">
        select id, product_name, product_inventory
        from product
    </select>

    <resultMap id="productMap" type="product">
        <id column="id" property="id"/>
        <result column="producr_name" property="productName"/>
        <result column="product_inventory" property="productInventory"/>
    </resultMap>
    <select id="findById" resultMap="productMap">
        select id, product_name, product_inventory
        from product
        where id = #{id}
    </select>

   <!-- <select id="findById" resultType="product">
        select id, product_name, product_inventory
        from product
        where id = #{id}
    </select>-->
    
    <select id="findByPage" resultType="product">
        select id, product_name, product_inventory
        from product
        limit #{start},#{pageSize};
    </select>

    <select id="findPageByMap" parameterType="map" resultType="product">
        select id, product_name, product_inventory
        from product
        limit #{start}, #{pageSize};
    </select>

    <delete id="findDelById">
        delete from product
        where id = #{id}
    </delete>

    <update id="update" parameterType="com.kaishengit.entity.Product">
        update product
        set product_name = #{productName},
        product_inventory = #{productInventory}
        where id = #{id}
    </update>



</mapper>